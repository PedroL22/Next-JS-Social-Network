import React, { FormEvent, useState } from "react";
import Head from "next/head";
import { useSession } from "next-auth/react";
import { GetServerSideProps } from "next";
import { prisma } from "../lib/prisma";
import { Posts } from "@prisma/client";
import Post from "../components/Post";

interface PostsProps {
  posts: Posts[];
}

export default function Home({ posts }: PostsProps) {
  const { data: session } = useSession({ required: true });
  const [newPost, setNewPost] = useState("");

  async function handleCreatePost(event: FormEvent) {
    event.preventDefault();

    await fetch("http://localhost:3000/api/posts/create", {
      method: "POST",
      body: JSON.stringify({ text: newPost, email: session.user.email }),
      headers: {
        "Content-Type": "application/json",
      },
    });

    setNewPost("");
  }

  return (
    <div>
      <Head>
        <title>Next JS Social Network</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg-gray-200 min-h-screen">
        <main className="pt-20 mx-auto max-w-7xl">
          <div className="flex px-4">
            <form onSubmit={handleCreatePost} className="mx-auto">
              <input
                type="text"
                value={newPost}
                onChange={(e) => setNewPost(e.target.value)}
                className="bg-gray-white pl-4 xl:pr-44 pr-36 pt-4 pb-10 rounded-md outline-0 border focus:border-gray-400"
                placeholder="Write something..."
              />
              <button
                type="submit"
                className="block my-2 bg-blue-700 hover:bg-blue-800 text-white px-5 py-2 rounded-md transition-all duration-250 ease-in"
              >
                Post
              </button>
            </form>
          </div>
          <div className="">
            {posts
              .sort((a, b) => (a.date < b.date ? 1 : -1))
              .map((item) => (
                <div key={item.id}>
                  <Post
                    id={item.id}
                    ownerEmail={item.ownerEmail}
                    ownerName={item.ownerName}
                    ownerImage={item.ownerImage}
                    text={item.text}
                    date={item.date}
                  />
                </div>
              ))}
          </div>
        </main>
      </div>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const posts = await prisma.posts.findMany({
    include: { User: true },
  });

  const data = posts.map((post) => {
    return {
      id: post.id,
      text: post.text,
      date: post.createdAt.toISOString(),
      ownerName: post.User?.name,
      ownerImage: post.User?.image,
      ownerEmail: post.email,
    };
  });

  return {
    props: {
      posts: data,
    },
  };
};
